---
format: 
  html:
    css: 
      - styles.css
      - members.css
    page-layout: full
    toc: false
    include-in-header: 
      - text: |
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
          <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css">        
---

```{r}
#| results: 'asis'
#| echo: false

library(htmltools)

# Get parameters from the parent document
member <- rmarkdown::metadata

# Helper function to safely get parameter values with defaults
get_param <- function(param_name, default = "") {
  if (is.null(member[[param_name]])) {
    return(default)
  } else {
    return(member[[param_name]])
  }
}

# Extract member information
name <- get_param("name", "Member Name")
position <- get_param("position", "")
photo <- get_param("photo", "default-profile.jpg")
email <- get_param("email", "")
personal_website <- get_param("personal_website", NULL)
faculty_website <- get_param("faculty_website", NULL)
social_media <- get_param("social_media", list())
mission_paragraphs <- get_param("mission_statement", list())
research_interests <- get_param("research_interests", list())
publications <- get_param("publications", list())

# Map platform names to Bootstrap icons
icon_map <- list(
  "bluesky" = "fa-brands fa-bluesky", 
  "linkedin" = "fa-brands fa-linkedin",
  "github" = "fa-brands fa-github",
  "orcid" = "fa-brands fa-orcid",
  "mastodon" = "fa-brands fa-mastodon",
  "scholar" = "fa-solid fa-graduation-cap",
  "researchgate" = "fa-brands fa-researchgate",
  "academia" = "fa-solid fa-book",
  "youtube" = "fa-brands fa-youtube",
  "instagram" = "fa-brands fa-instagram",
  "facebook" = "fa-brands fa-facebook"
)


# Mission statement
mission_block <- NULL
if (length(mission_paragraphs) > 0) {
  mission_block <- div(class = "member-mission",
    h2("Mission Statement"),
    lapply(mission_paragraphs, function(paragraph) p(HTML(shiny::markdown(paragraph))))
  )
}

# Compose the full profile
profile <- div(class = "member-profile",
  mission_block
)

# Render the profile
```